{"version":3,"file":"safe-function.esm.js","sources":["../src/main.js"],"sourcesContent":["// safe-function.js\n// 封装常用 js 函数，自动处理报错，避免在使用的时候到处加 try catch\n\nfunction log(...args) {\n  console.log('', ...args);\n}\n\n/**\n * 处理 new URL 报错问题：js 获取 url 字符串的解析对象\n * @param url 一个表示绝对或相对 URL 的 DOMString。如果 url 是相对 URL，则会将 base 用作基准 URL。如果 url 是绝对 URL，则无论参数 base 是否存在，都将被忽略\n * @param base 一个表示基准 URL 的字符串，当 url 为相对 URL 时，它才会生效。如果未指定，它默认为 undefined\n * @return \n * @example\n  newURL('https://www.ccgegc.com:9003/book/51920/36340.html?a=1#search') => URL {\n    href: 'https://www.ccgegc.com:9003/book/51920/36340.html?a=1#search',\n    origin: 'https://www.ccgegc.com:9003',\n    protocol: 'https:',\n    username: '',\n    password: '',\n    host: 'www.ccgegc.com:9003',\n    hostname: 'www.ccgegc.com',\n    port: '9003',\n    pathname: '/book/51920/36340.html',\n    search: '?a=1',\n    searchParams: URLSearchParams { 'a' => '1' },\n    hash: '#search'\n  }\n\n  newURL('abc123') => URL {}\n*/\nfunction newURL(url, base = undefined) {\n  try {\n    return new URL(url, base);\n  } catch (error) {\n    log(\"_newURL error\", error?.message);\n  }\n  return {};\n}\n\n// 处理 JSON.parse(string) 报错\nfunction JsonPrase(string) {\n  try {\n    return JSON.parse(string);\n  } catch (error) {\n    log(\"JsonPrase error\", error?.message);\n  }\n  return ''\n}\n\nexport { \n  newURL,\n  JsonPrase\n}\n"],"names":["newURL","url","base","undefined","URL","error","JsonPrase","string","JSON","parse"],"mappings":"AA8BA,SAASA,EAAOC,EAAKC,OAAOC,GAC1B,IACE,OAAO,IAAIC,IAAIH,EAAKC,EACrB,CAAC,MAAOG,GAET,CACA,MAAO,CAAE,CACX,CAGA,SAASC,EAAUC,GACjB,IACE,OAAOC,KAAKC,MAAMF,EACnB,CAAC,MAAOF,GAET,CACA,MAAO,EACT"}